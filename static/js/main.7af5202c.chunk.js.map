{"version":3,"sources":["reportWebVitals.js","store/userReducer.ts","store/infoReducer.ts","store/questionsReducer.ts","saga/userSaga.ts","saga/questionsSaga.ts","saga/infoSaga.ts","saga/index.ts","store/index.ts","logic.js","components/Search.tsx","components/Page.tsx","components/Info.tsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","users","loading","error","text","SET_USERS","SET_USERS_TEXT","SET_USERS_LOAD","SET_USERS_ERROR","FETCH_USERS","setUsers","payload","type","setUsersLoad","setUsersError","info","SET_INFO","SET_INFO_LOAD","SET_INFO_ERROR","FETCH_INFO","setInfo","qid","setInfoError","questions","SET_QUESTIONS","SET_QUESTIONS_ERROR","SET_QUESTIONS_LOAD","SET_QUESTIONS_TYPE","SET_QUESTIONS_RESET","FETCH_QUESTIONS","setQuestions","setQuestionsError","setQuestionsType","fetchQuestions","value","typeUrl","fetchUserWorker","userWatcher","url","q","encodeURIComponent","fetchUsersFromApi","a","fetch","response","json","data","action","put","call","result","items","error_id","error_message","error_name","takeEvery","fetchQuestionsWorker","questionsWatcher","fetchQuestionsFromApi","fetchInfoWorker","infoWatcher","fetchInfoFromApi","rootWatcher","all","fork","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","userReducer","state","infoReducer","questionsReducer","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","run","app","inputSearch","searchButton","ru","Search","useSelector","history","useHistory","dispatch","useDispatch","useState","searchText","setSearchText","className","onChange","event","target","onClick","fetchUsers","push","Page","questions2","loading2","error2","questions2Type","handleClickName","currentTarget","dataset","userid","handleClickTag","tag","initTabState","name","title","tabState","setTabState","handleSort","key","sortWay","field","sortedQuestions","React","useMemo","colState","Object","values","find","el","st","arr","split","reverse","sortedField","slice","sort","b","aa","bb","toLowerCase","sortIcon","empt","change","az","za","errors","err","errorsTabMain","errorsTabView","to","tabIndex","role","onKeyDown","console","log","map","question","data-label","data-name","owner","display_name","data-userid","user_id","question_id","answer_count","tags","data-tag","item","Info","useParams","stateInfo","useEffect","fetchInfo","len","length","i","is_accepted","dangerouslySetInnerHTML","__html","body","answer_id","ReactDOM","render","StrictMode","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.7af5202c.chunk.js","sourcesContent":["// eslint-disable-next-line\r\nconst reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","interface UserState {\r\n  users: null | any[];\r\n  loading: boolean;\r\n  error: null | string;\r\n  text: string;\r\n}\r\n\r\ninterface UserAction {\r\n  type: string;\r\n  payload?: any;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  users: null,\r\n  loading: false,\r\n  error: null,\r\n  text: '',\r\n};\r\n\r\nexport const SET_USERS = 'SET_USERS';\r\nexport const SET_USERS_TEXT = 'SET_USERS_TEXT';\r\nexport const SET_USERS_LOAD = 'SET_USERS_LOAD';\r\nexport const SET_USERS_ERROR = 'SET_USERS_ERROR';\r\nexport const FETCH_USERS = 'FETCH_USERS';\r\n\r\nexport default function userReducer(state = initialState, action: UserAction): UserState {\r\n  switch(action.type) { /* eslint-disable-line */\r\n    case SET_USERS_TEXT:\r\n      return {\r\n        ...state, loading: false, error: null, text: action.payload,\r\n      };\r\n    case SET_USERS_LOAD:\r\n      return { ...state, loading: true, error: null };\r\n    case SET_USERS_ERROR:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case SET_USERS:\r\n      return { ...state, loading: false, users: action.payload };\r\n  }\r\n  return state;\r\n}\r\n\r\nexport const setUsers = (payload: any) => ({ type: SET_USERS, payload });\r\nexport const setUsersText = (payload: string) => ({ type: SET_USERS_TEXT, payload });\r\nexport const setUsersLoad = (payload: boolean) => ({ type: SET_USERS_LOAD, payload });\r\nexport const setUsersError = (payload: any) => ({ type: SET_USERS_ERROR, payload });\r\nexport const fetchUsers = ({ q }: any) => ({ type: FETCH_USERS, q });\r\n","interface InfoState {\r\n  info: null | any;\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\n\r\ninterface InfoAction {\r\n  type: string;\r\n  payload?: any;\r\n  qid: string;\r\n}\r\nconst initialState = {\r\n  info: {},\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// actions\r\nexport const SET_INFO = 'SET_INFO';\r\nexport const SET_INFO_LOAD = 'SET_INFO_LOAD';\r\nexport const SET_INFO_ERROR = 'SET_INFO_ERROR';\r\nexport const FETCH_INFO = 'FETCH_INFO';\r\n\r\nexport default function infoReducer(state = initialState, action: InfoAction): InfoState {\r\n  switch(action.type) { /* eslint-disable-line */\r\n    case SET_INFO_LOAD:\r\n      return { ...state, loading: true, error: null };\r\n    case SET_INFO_ERROR:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case SET_INFO:\r\n      return { ...state, loading: false, info: { ...state.info, [action.qid]: action.payload } };\r\n  }\r\n  return state;\r\n}\r\n\r\nexport const setInfo = ({ payload, qid }: any) => ({ type: SET_INFO, payload, qid });\r\nexport const setInfoLoad = (payload: boolean) => ({ type: SET_INFO_LOAD, payload });\r\nexport const setInfoError = (payload: any) => ({ type: SET_INFO_ERROR, payload });\r\nexport const fetchInfo = ({ qid }: any) => ({ type: FETCH_INFO, qid });\r\n","interface QuestionsState {\r\n  questions: null | any[];\r\n  loading: boolean;\r\n  error: null | string;\r\n  type: null | string;\r\n}\r\n\r\ninterface QuestionsAction {\r\n  type: string;\r\n  payload?: any;\r\n}\r\n\r\nconst initialState = {\r\n  questions: null,\r\n  loading: false,\r\n  error: null,\r\n  type: null,\r\n};\r\n\r\nexport const SET_QUESTIONS = 'SET_QUESTIONS';\r\nexport const SET_QUESTIONS_ERROR = 'SET_QUESTIONS_ERROR';\r\nexport const SET_QUESTIONS_LOAD = 'SET_QUESTIONS_LOAD';\r\nexport const SET_QUESTIONS_TYPE = 'SET_QUESTIONS_TYPE';\r\nexport const SET_QUESTIONS_RESET = 'SET_QUESTIONS_RESET';\r\nexport const FETCH_QUESTIONS = 'FETCH_QUESTIONS';\r\n\r\nexport default function questionsReducer(state = initialState, action: QuestionsAction): QuestionsState {\r\n  switch(action.type) { /* eslint-disable-line */\r\n    case SET_QUESTIONS_LOAD:\r\n      return { ...state, loading: true, error: null };\r\n    case SET_QUESTIONS_TYPE:\r\n      return { ...state, type: action.payload };\r\n    case SET_QUESTIONS_ERROR:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case SET_QUESTIONS:\r\n      return { ...state, loading: false, questions: action.payload };\r\n    case SET_QUESTIONS_RESET:\r\n      return { ...initialState };\r\n  }\r\n  return state;\r\n}\r\n\r\nexport const setQuestions = (payload: any) => ({ type: SET_QUESTIONS, payload });\r\nexport const setQuestionsError = (payload: any) => ({ type: SET_QUESTIONS_ERROR, payload });\r\nexport const setQuestionsLoad = (payload: boolean) => ({ type: SET_QUESTIONS_LOAD, payload });\r\nexport const setQuestionsType = (payload: string) => ({ type: SET_QUESTIONS_TYPE, payload });\r\nexport const setQuestionsReset = () => ({ type: SET_QUESTIONS_RESET });\r\nexport const fetchQuestions = ({ value, typeUrl }: any) => ({ type: FETCH_QUESTIONS, value, typeUrl });\r\n","import { put, takeEvery, call } from 'redux-saga/effects';\r\nimport {\r\n  FETCH_USERS,\r\n  setUsers,\r\n  setUsersText,\r\n  setUsersLoad,\r\n  setUsersError,\r\n} from '../store/userReducer';\r\n\r\nconst url = (q: string) => `https://api.stackexchange.com/2.2/search/advanced?order=desc&sort=activity&q=${encodeURIComponent(q)}&site=stackoverflow`;\r\nconst fetchUsersFromApi = async (q: string) => fetch(url(q))\r\n  .then((response) => response.json())\r\n  .then((data) => data);\r\n\r\nfunction* fetchUserWorker(action: any): any {\r\n  yield put(setUsersText(action.q));\r\n  yield put(setUsersLoad(true));\r\n  const result = yield call(fetchUsersFromApi, action.q);\r\n  /* eslint-disable camelcase */\r\n  const {\r\n    items,\r\n    error_id,\r\n    error_message,\r\n    error_name,\r\n  } = result;\r\n  const error = { error_id, error_message, error_name };\r\n  if (items) {\r\n    yield put(setUsers(items));\r\n  } else {\r\n    yield put(setUsersError(error));\r\n  }\r\n}\r\n\r\nexport function* userWatcher() {\r\n  yield takeEvery(FETCH_USERS, fetchUserWorker);\r\n}\r\n","import { put, takeEvery, call } from 'redux-saga/effects';\r\nimport {\r\n  FETCH_QUESTIONS,\r\n  setQuestions,\r\n  setQuestionsLoad,\r\n  setQuestionsError,\r\n  setQuestionsType,\r\n} from '../store/questionsReducer';\r\n\r\nconst url = (value: string, typeUrl: string) => {\r\n  if (typeUrl === 'tags') {\r\n    return `https://api.stackexchange.com/2.2/tags/${value}/faq?site=stackoverflow`;\r\n  }\r\n  // ids\r\n  return `https://api.stackexchange.com/2.2/users/${value}/questions?order=desc&sort=activity&site=stackoverflow`;\r\n};\r\nconst fetchQuestionsFromApi = async (value: string, typeUrl: string) => fetch(url(value, typeUrl))\r\n  .then((response) => response.json())\r\n  .then((data) => data);\r\n\r\nfunction* fetchQuestionsWorker(action: any): any {\r\n  yield put(setQuestionsLoad(true));\r\n  yield put(setQuestionsType(action.typeUrl)); // log\r\n  const result = yield call(fetchQuestionsFromApi, action.value, action.typeUrl);\r\n  /* eslint-disable camelcase */\r\n  const {\r\n    items,\r\n    error_id,\r\n    error_message,\r\n    error_name,\r\n  } = result;\r\n  const error = { error_id, error_message, error_name };\r\n  if (items) {\r\n    yield put(setQuestions(items));\r\n  } else {\r\n    yield put(setQuestionsError(error));\r\n  }\r\n}\r\n\r\nexport function* questionsWatcher() {\r\n  yield takeEvery(FETCH_QUESTIONS, fetchQuestionsWorker);\r\n}\r\n","import { put, takeEvery, call } from 'redux-saga/effects';\r\nimport {\r\n  FETCH_INFO,\r\n  setInfo,\r\n  setInfoLoad,\r\n  setInfoError,\r\n} from '../store/infoReducer';\r\n\r\nconst url = (qid: string) => `https://api.stackexchange.com/2.2/questions/${qid}/answers?order=desc&sort=activity&site=stackoverflow&filter=withbody`;\r\n\r\nconst fetchInfoFromApi = async (qid: string) => fetch(url(qid))\r\n  .then((response) => response.json())\r\n  .then((data) => data);\r\n\r\nfunction* fetchInfoWorker(action: any): any {\r\n  yield put(setInfoLoad(true));\r\n  const result = yield call(fetchInfoFromApi, action.qid);\r\n  /* eslint-disable camelcase */\r\n  const {\r\n    items,\r\n    error_id,\r\n    error_message,\r\n    error_name,\r\n  } = result;\r\n  const error = { error_id, error_message, error_name };\r\n  if (items) {\r\n    yield put(setInfo({ payload: items, qid: action.qid }));\r\n  } else {\r\n    yield put(setInfoError(error));\r\n  }\r\n}\r\n\r\nexport function* infoWatcher() {\r\n  yield takeEvery(FETCH_INFO, fetchInfoWorker);\r\n}\r\n","import { all, fork } from 'redux-saga/effects';\r\nimport { userWatcher } from './userSaga';\r\nimport { questionsWatcher } from './questionsSaga';\r\nimport { infoWatcher } from './infoSaga';\r\n\r\nexport function* rootWatcher() {\r\n  yield all([\r\n    fork(userWatcher),\r\n    fork(questionsWatcher),\r\n    fork(infoWatcher),\r\n  ]);\r\n}\r\n","import {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  createStore,\r\n  compose,\r\n} from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport userReducer from './userReducer';\r\nimport infoReducer from './infoReducer';\r\nimport questionsReducer from './questionsReducer';\r\nimport { rootWatcher } from '../saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst rootReducer = combineReducers({\r\n  userReducer,\r\n  infoReducer,\r\n  questionsReducer,\r\n});\r\n\r\nexport const composeEnhancers = (window\r\n  && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(sagaMiddleware),\r\n);\r\nexport const store = createStore(rootReducer, enhancer);\r\n\r\nsagaMiddleware.run(rootWatcher);\r\n","export const app = {\r\n  url: '',\r\n  seo: null,\r\n  browsers: ['firefox', 'chrome', 'safari'],\r\n  ui: {\r\n    inputSearch: {},\r\n    searchButton: { ru: 'Искать' },\r\n  },\r\n  test: {},\r\n};\r\n","import React, { useState } from 'react'; // eslint-disable-line\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector, RootStateOrAny } from 'react-redux';\r\nimport { fetchUsers } from '../store/userReducer';\r\nimport { app } from '../logic';\r\n\r\nconst Search = () => {\r\n  const [questions, loading, error, text] = useSelector((state: RootStateOrAny) => [\r\n    state.userReducer.users,\r\n    state.userReducer.loading,\r\n    state.userReducer.error,\r\n    state.userReducer.text,\r\n  ]);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [searchText, setSearchText] = useState(text || 'how to sort js object');\r\n\r\n  const onChange = (event: any) => {\r\n    setSearchText(event.target.value);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (searchText) {\r\n      dispatch(fetchUsers({ q: searchText }));\r\n      history.push('/result');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"layout\">\r\n      {loading ? <div className=\"loading\" /> : (\r\n        <form className=\"searchBlock\">\r\n          <input className=\"searchBlock__input\" value={searchText} onChange={onChange} />\r\n          <button className=\"searchBlock__button\" type=\"submit\" onClick={handleSearch}>{app.ui.searchButton.ru}</button>\r\n        </form>\r\n      )}\r\n      {error?.error_id && (\r\n        <div>\r\n          <div className=\"error\">\r\n            <p>{`ОШИБКА ${error.error_id}`}</p>\r\n            <p>{error.error_message}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState } from 'react'; // eslint-disable-line\r\nimport { useDispatch, useSelector, RootStateOrAny } from 'react-redux';\r\nimport {\r\n  Link,\r\n} from 'react-router-dom';\r\nimport { fetchQuestions } from '../store/questionsReducer';\r\n\r\nconst Page = () => {\r\n  const [questions, loading, error] = useSelector((state: RootStateOrAny) => [\r\n    state.userReducer.users,\r\n    state.userReducer.loading,\r\n    state.userReducer.error,\r\n  ]);\r\n  const [questions2, loading2, error2, questions2Type] = useSelector((state: RootStateOrAny) => [\r\n    state.questionsReducer.questions,\r\n    state.questionsReducer.loading,\r\n    state.questionsReducer.error,\r\n    state.questionsReducer.type,\r\n  ]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickName = (data: React.SyntheticEvent<HTMLButtonElement>) => {\r\n    dispatch(fetchQuestions({ value: data.currentTarget.dataset.userid, typeUrl: 'ids' }));\r\n  };\r\n\r\n  const handleClickTag = (data: React.SyntheticEvent<HTMLButtonElement>) => {\r\n    dispatch(fetchQuestions({ value: data.currentTarget.dataset.tag, typeUrl: 'tags' }));\r\n  };\r\n\r\n  type TableStateType = {\r\n    [key: string]: (string)[];\r\n  };\r\n  const initTabState = { name: ['owner.display_name', 'empt'], title: ['title', 'empt'] };\r\n  const [tabState, setTabState] = useState<TableStateType>(initTabState);\r\n  // { name: ['owner.display_name', null], title: ['title', null] }\r\n  const handleSort = (key: string, sortWay: string) => {\r\n    const field = tabState[key][0];\r\n    setTabState({ ...initTabState, [key]: [field, sortWay] });\r\n  };\r\n\r\n  const sortedQuestions = React.useMemo(() => {\r\n    const colState = (Object.values(tabState).find((el) => el[1] !== 'empt') || []);\r\n    const st = colState[0];\r\n    const sortWay = colState[1];\r\n    const arr = (st || 'title').split('.').reverse();\r\n    const sortedField = arr[0];\r\n    if (!sortWay) { return questions; }\r\n    return questions.slice().sort((a: any, b: any) => {\r\n      const aa = arr[1] ? a[arr[1]] : a; const bb = arr[1] ? b[arr[1]] : b;\r\n      if (aa[sortedField].toLowerCase() < bb[sortedField].toLowerCase()) {\r\n        return sortWay === 'az' ? -1 : 1;\r\n      }\r\n      if (aa[sortedField].toLowerCase() > bb[sortedField].toLowerCase()) {\r\n        return sortWay === 'az' ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }, [questions, tabState]);\r\n\r\n  interface Person {\r\n    change: string;\r\n    text: string;\r\n }\r\n\r\n  interface SortIconType {\r\n    [key: string]: Person;\r\n }\r\n\r\n  const sortIcon: SortIconType = {\r\n    empt: { change: 'az', text: '-' },\r\n    az: { change: 'za', text: '(a-z)' },\r\n    za: { change: 'az', text: '(z-a)' },\r\n  };\r\n\r\n  const errors = (err: any) => {\r\n    if (!err?.error_id) return false;\r\n    return (\r\n      <div>\r\n        <div className=\"error\">\r\n          <p>{`ОШИБКА ${err.error_id}`}</p>\r\n          <p>{err.error_message}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const errorsTabMain = errors(error);\r\n  const errorsTabView = errors(error2);\r\n\r\n  if ((!questions && !loading) || errorsTabMain) {\r\n    return (\r\n      <Link to=\"search/\">Перейти на страницу поиска</Link>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"layout\">\r\n      <div className={`pageContent ${(questions && questions2) ? '' : 'disabled_'}`}>\r\n        <div className=\"pageContent__item\">\r\n          {errorsTabMain}\r\n          {loading && <div className=\"loading\" />}\r\n          {questions && (\r\n            <table className=\"table\">\r\n              <caption>Результаты поиска</caption>\r\n              <tr>\r\n                <th>\r\n                  Автор вопроса\r\n                  <span\r\n                    tabIndex={0}\r\n                    role=\"button\"\r\n                    onKeyDown={() => { console.log('12'); }}\r\n                    onClick={() => {\r\n                      const key = sortIcon[tabState.name[1]].change;\r\n                      handleSort('name', key);\r\n                    }}\r\n                  >\r\n                    {sortIcon[tabState.name[1]].text}\r\n                  </span>\r\n                </th>\r\n                <th>\r\n                  Тема\r\n                  <span\r\n                    tabIndex={0}\r\n                    role=\"button\"\r\n                    onKeyDown={() => { console.log('123'); }}\r\n                    onClick={() => {\r\n                      const key = sortIcon[tabState.title[1]].change;\r\n                      handleSort('title', key);\r\n                    }}\r\n                  >\r\n                    {sortIcon[tabState.title[1]].text}\r\n                  </span>\r\n                </th>\r\n                <th>Количество ответов</th>\r\n                <th>Теги</th>\r\n              </tr>\r\n              <tbody>\r\n                {sortedQuestions && sortedQuestions?.map((question: any) => (\r\n                  <tr key={question.question_id}>\r\n                    <td data-label=\"Автор вопроса\">\r\n                      <button onClick={handleClickName} type=\"button\" data-name={question.owner.display_name} data-userid={question.owner.user_id}>\r\n                        {question.owner.display_name}\r\n                      </button>\r\n                    </td>\r\n                    <td data-label=\"Тема\"><Link to={`info/${question.question_id}`}>{question.title}</Link></td>\r\n                    <td data-label=\"Количество ответов\"><Link to={`info/${question.question_id}`}>{question.answer_count}</Link></td>\r\n                    <td data-label=\"Теги\">\r\n                      {question.tags?.map((tag: any) => (\r\n                        <button key={tag} onClick={handleClickTag} type=\"button\" data-tag={tag}>\r\n                          {tag}\r\n                        </button>\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n        {(questions2 || loading2 || errorsTabView) && (\r\n          <div className=\"pageContent__item\">\r\n            {errorsTabView}\r\n            {loading2 && <div className=\"loading\" />}\r\n            {questions2 && (\r\n              <table className=\"table\">\r\n                <caption>{`Результаты поиска ${questions2Type}`}</caption>\r\n                <tbody>\r\n                  <tr>\r\n                    <th>Автор вопроса</th>\r\n                    <th>Тема</th>\r\n                    <th>Количество ответов</th>\r\n                    <th>Теги</th>\r\n                  </tr>\r\n                  {questions2.map((question: any) => (\r\n                    <tr key={question.question_id}>\r\n                      <td data-label=\"Автор вопроса\">{question.owner.display_name}</td>\r\n                      <td data-label=\"Тема\">{question.title}</td>\r\n                      <td data-label=\"Количество ответов\">{question.answer_count}</td>\r\n                      <td data-label=\"Теги\">{question.tags?.map((item: any) => (<span key={item}>{`${item} `}</span>)) }</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React, { useEffect } from 'react'; // eslint-disable-line\r\nimport { useDispatch, useSelector, RootStateOrAny } from 'react-redux';\r\nimport {\r\n  useParams,\r\n} from 'react-router-dom';\r\nimport { fetchInfo } from '../store/infoReducer';\r\n\r\nconst Info = () => { // eslint-disable-line\r\n  const { qid } = useParams<{ qid: string }>();\r\n  const [stateInfo, loading, error] = useSelector((state: RootStateOrAny) => [\r\n    state.infoReducer.info,\r\n    state.infoReducer.loading,\r\n    state.infoReducer.error,\r\n  ]);\r\n  const dispatch = useDispatch();\r\n  useEffect(\r\n    () => {\r\n      if (!stateInfo[qid]) {\r\n        dispatch(fetchInfo({ qid }));\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\" />;\r\n  }\r\n  if (!qid) {\r\n    return <div>Нет номера вопроса в урле</div>;\r\n  }\r\n  if (error?.error_id) {\r\n    return (\r\n      <div>\r\n        <div className=\"error\">\r\n          <p>{`ОШИБКА ${error.error_id}`}</p>\r\n          <p>{error.error_message}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const len = stateInfo[qid]?.length;\r\n  return (\r\n    <div className=\"layout\">\r\n      <div className=\"info\">\r\n        <div className=\"info__top\">\r\n          <h2>Список ответов</h2>\r\n          {len === 0 && <h3>Нет ответов</h3>}\r\n        </div>\r\n        <div className=\"info__answers\">\r\n          {stateInfo[qid]\r\n            && stateInfo[qid].map((item: any, i: number) => (\r\n              <div key={item.answer_id} className=\"info__answ\">\r\n                <h3>{`${i + 1}/${len}`}</h3>\r\n                {item.is_accepted ? <div className=\"info__answ__check\" /> : false}\r\n                <div dangerouslySetInnerHTML={{ __html: item.body }} />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import reportWebVitals from './reportWebVitals'; /* eslint-disable-line */\r\n\r\nimport { Provider } from 'react-redux';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport { store } from './store/index';\r\nimport Search from './components/Search';\r\nimport Page from './components/Page';\r\nimport Info from './components/Info';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Provider store={store}>\r\n        <Switch>\r\n          <Route exact path=\"/search\">\r\n            <Search />\r\n          </Route>\r\n          <Route exact path=\"/result\">\r\n            <Page />\r\n          </Route>\r\n          <Route exact path=\"/info/:qid?\">\r\n            <Info />\r\n          </Route>\r\n        </Switch>\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}